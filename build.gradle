buildscript {
	ext {
		springBootVersion = '2.0.0.M7'
		nebulaVersion = '3.0.3'
	}
	repositories {
//		jcenter()
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("com.netflix.nebula:gradle-extra-configurations-plugin:${nebulaVersion}")
	}
}

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'nebula.optional-base'

group = 'ru.khv.fox.software.web.cisco.restbox'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

compileJava.options.encoding = 'UTF-8'
javadoc {
    options.encoding = 'UTF-8'
    options.charSet = 'UTF-8'
}

repositories {
//	jcenter()
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}

configurations {
	compile.exclude module: "spring-boot-starter-tomcat"
	compile.exclude module: "spring-boot-starter-jetty"
	compile.exclude module: "spring-boot-starter-reactor-netty"
//	compile.exclude module: "spring-jcl"
//	compile.exclude module: "commons-logging"
//	compile.exclude module: "jboss-annotations-api_1.2_spec"
}

/*
 * Copyright (c) 2018 Boris Fox.
 * All rights reserved.
 */

//compileJava.dependsOn(processResources)

dependencies {
//	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.springframework.boot:spring-boot-starter-webflux')
	compile('org.springframework.boot:spring-boot-starter-undertow')
	compile('org.springframework.boot:spring-boot-starter-logging')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-validation')
	compile('com.fasterxml.jackson.core:jackson-core')
	compile('com.fasterxml.jackson.core:jackson-databind')
	compile('com.fasterxml.jackson.core:jackson-annotations')
	compile 'org.springframework.boot:spring-boot-configuration-processor', optional
//	optional('org.springframework.boot:spring-boot-configuration-processor')
//	compile('ch.qos.logback:logback-classic')
	runtime('org.springframework.boot:spring-boot-devtools')
//	runtime('org.slf4j:jcl-over-slf4j')
	compileOnly('org.projectlombok:lombok')
	compileOnly('com.google.code.findbugs:jsr305:3.0.2')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('io.projectreactor:reactor-test')
	testCompile('io.rest-assured:rest-assured:3.0.6')
}
