/*
 * Copyright (c) 2018 Boris Fox.
 * All rights reserved.
 */

plugins {
  id "idea"
  id "java"
  id "groovy"
  id "org.springframework.boot" version "2.0.1.RELEASE"
  id "nebula.optional-base" version "3.3.0"
//  id "net.linguica.maven-settings" version "0.5"
}

apply plugin: "io.spring.dependency-management"

description = 'Cisco RESTBox Middleware in Java'

group = 'ru.khv.fox.software.web.cisco.restbox'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.9

compileJava.options.encoding = 'UTF-8'
javadoc {
    options.encoding = 'UTF-8'
    options.charSet = 'UTF-8'
}

repositories {
//	jcenter()
	mavenCentral()
	maven { url = 'https://repo.spring.io/snapshot' }
	maven { url = 'https://repo.spring.io/milestone' }
}

//configurations {
//	compile.exclude module: "spring-boot-starter-reactor-netty"	// default embedded web server with starter-webflux
//}

//compileJava.dependsOn(processResources)

dependencies {
//	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
//	compile('org.springframework.boot:spring-boot-starter-tomcat')		// OK. default with starter-web
//	compile('org.springframework.boot:spring-boot-starter-jetty')		// OK
//	compile('org.springframework.boot:spring-boot-starter-undertow')	// OK
//	compile('org.springframework.boot:spring-boot-starter-reactor-netty')	// OK. default with starter-webflux
//-	compile('org.springframework.boot:spring-boot-starter-web')		// Do not include with webflux!
	compile('org.springframework.boot:spring-boot-starter-webflux')
	compile('org.springframework.boot:spring-boot-starter-logging')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-validation')
//	compile('com.fasterxml.jackson.core:jackson-core')
//	compile('com.fasterxml.jackson.core:jackson-databind')
//	compile('com.fasterxml.jackson.core:jackson-annotations')
	compile group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.+'
	compile group: 'javax.xml', name: 'jaxb-api', version: '2.+'
	compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.+'
	compile 'org.springframework.boot:spring-boot-configuration-processor', optional
	runtime('org.springframework.boot:spring-boot-devtools')
//	compileOnly('org.springframework.boot:spring-boot-configuration-processor')
	compileOnly('org.projectlombok:lombok')
	compileOnly('com.google.code.findbugs:jsr305:3.+')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.security:spring-security-test')
	testCompile('io.projectreactor:reactor-test')
	testCompile('io.rest-assured:rest-assured:3.+')
	testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.+'
	testCompile group: 'com.spotify', name: 'hamcrest-pojo', version: '1.+'
	testCompile group: 'com.spotify', name: 'hamcrest-optional', version: '1.+'
}
