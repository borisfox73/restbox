/*
 * Copyright (c) 2019 Boris Fox.
 * All rights reserved.
 */

plugins {
    id 'idea'
    id 'java'
    id 'groovy'
    id 'org.springframework.boot' version '2.2.2.RELEASE'
    id 'com.heroku.sdk.heroku-gradle' version '1.0.4'
    id 'com.google.cloud.tools.jib' version '1.8.0'
}

apply plugin: 'io.spring.dependency-management'

description = 'Cisco RESTBox Middleware in Java'

group = 'ru.khv.fox.software.web.cisco.restbox'
version = '0.1.0'

def applicationName = 'rvolkov-restbox'


defaultTasks 'build'

compileJava.sourceCompatibility = 13

gradle.projectsEvaluated {
	tasks.withType(JavaCompile) {
		options.compilerArgs << '-Xlint:unchecked' << '-Xlint:deprecation'
	}
}

javadoc {
    options.encoding = 'UTF-8'
    options.charSet = 'UTF-8'
}

repositories {
	mavenCentral()
}

configurations {
    compile.exclude module: 'HikariCP'
//	compile.exclude module: "spring-boot-starter-reactor-netty"	// default embedded web server with starter-webflux
}

dependencies {
//	implementation('org.springframework.boot:spring-boot-starter-tomcat')		// OK. default with starter-web
//	implementation('org.springframework.boot:spring-boot-starter-jetty')		// OK
//	implementation('org.springframework.boot:spring-boot-starter-undertow')	// OK
//	implementation('org.springframework.boot:spring-boot-starter-reactor-netty')	// OK. default with starter-webflux
	implementation('org.springframework.boot:spring-boot-starter-webflux')
	implementation('org.springframework.boot:spring-boot-starter-logging')
	implementation('org.springframework.boot:spring-boot-starter-security')
	implementation('org.springframework.boot:spring-boot-starter-validation')
	implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.+'
	implementation group: 'io.projectreactor.addons', name: 'reactor-extra', version: '3.2.3.RELEASE'

	implementation group: 'org.webjars', name: 'webjars-locator', version: '0.36'
	implementation group: 'org.webjars.bower', name: 'bootstrap', version: '3.3.7'                 // 4.3.1
	implementation group: 'org.webjars.bower', name: 'angular', version: '1.6.3'                   // 1.7.7
	implementation group: 'org.webjars.bower', name: 'angular-resource', version: '1.6.3'          // 1.7.7
	implementation group: 'org.webjars.bower', name: 'angular-route', version: '1.6.3'             // 1.7.7
	implementation group: 'org.webjars.bower', name: 'jquery', version: '3.2.1'                    // 3.4.1
	implementation group: 'org.webjars.bower', name: 'es5-shim', version: '4.5.9'                  // ok
	implementation group: 'org.webjars.bower', name: 'json3', version: '3.3.2'                     // ok

	compileOnly('org.projectlombok:lombok')
	compileOnly group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'

	annotationProcessor('org.springframework.boot:spring-boot-configuration-processor')
	annotationProcessor('org.projectlombok:lombok')

	runtimeOnly('org.springframework.boot:spring-boot-devtools')
	runtimeOnly group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
	runtimeOnly group: 'com.sun.xml.bind', name: 'jaxb-core', version: '2.3.0.1'
	runtimeOnly group: 'com.sun.xml.bind', name: 'jaxb-impl', version: '2.3.2'

	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation('org.springframework.security:spring-security-test')
	testImplementation('io.projectreactor:reactor-test')
	testImplementation('io.rest-assured:rest-assured:3.+') {
	    // https://github.com/quarkusio/quarkus/issues/1991
	    exclude group: 'com.sun.xml.bind', module: 'jaxb-osgi'
	}
	testImplementation group: 'io.rest-assured', name: 'json-schema-validator', version: '3.+'
	testImplementation group: 'org.hamcrest', name: 'hamcrest', version: '2.+'
	testImplementation group: 'org.hamcrest', name: 'hamcrest-junit', version: '2.+'
	testImplementation group: 'com.spotify', name: 'hamcrest-pojo', version: '1.+'
	testImplementation group: 'com.spotify', name: 'hamcrest-optional', version: '1.+'
	testImplementation group: 'com.jayway.jsonpath', name: 'json-path-assert', version: '2.+'
}

heroku {
	def artifact = "libs/${bootJar.getArchiveFileName().get()}"
	appName = applicationName
	jdkVersion = 13
	includes = [ "${project.buildDir}/$artifact" ]
	includeRootDir = project.buildDir
	includeBuildDir = false
	processTypes(web: "java -jar $artifact --spring.profiles.active=heroku" as String)
}

jib {
//	from.image = 'openjdk:13'                               // 264M
//	from.image = 'openjdk:13-alpine'                        // 214M
	from.image = 'adoptopenjdk/openjdk13:ubi-minimal-jre'   // 109M
	to.image = "registry.heroku.com/$applicationName/web"
	container {
		args = [ '--spring.profiles.active=heroku' ]
		jvmFlags = [ '-XX:+UseContainerSupport', '-XX:+AlwaysActAsServerClassMachine', '-XX:+PerfDisableSharedMem', '-Xmx300m', '-Xss512k', '-XX:MetaspaceSize=100m', '-XX:CICompilerCount=2' ]
		ports = [ '3001' ]
		creationTime = 'USE_CURRENT_TIMESTAMP'
	}
}
